Prolog evolved out of research at the University of Aix-Marseille back in the late 60's and early 70's. 
Alain Colmerauer and Phillipe Roussel, both of University of Aix-Marseille, colaborated with Robert Kowalski 
of the University of Edinburgh to create the underlying design of Prolog as we know it today. 
Kowalski contributed the theoretical framework on which Prolog is founded while Colmerauer's research 
at that time provided means to formalize the Prolog language.

1972 is referred to by most sources as the birthdate of Prolog. Since its birth it has branched off in 
many different dialects. Two of the main dialects of Prolog stem from the two Universities of its origin: 
Edinburgh and Aix-Marseille. At this time the first Prolog interpreter was built by Roussel. 
The first Prolog compiler was credited to David Warren, an expert on Artificial Intelligence at the University of Edinburgh.

To this day Prolog has grown in use throughout North America and Europe. Prolog was used heavily 
in the European Esprit programme and in Japan where it was used in building the ICOT Fifth Generation 
Computer Systems Initiative. The Japanese Government developed this project in an attempt to create 
intelligent computers. Prolog was a main player in these historical computing endeavours.

Prolog became even more pervasive when Borland's Turbo Prolog was released in the 1980's. 
The language has continued to develop and be used by many scientists and industry experts. 
Now there is even and ISO Prolog standardisation (1995) where all of its individual parts 
have been defined to ensure that the core of the language remains fixed.









